const typeDefs = ` 
scalar JSON

type CubeData {id: ID!,
  cube_no: String,
  t_run: String,
  service_no: String,
  cat_1st: String,
  cat_2nd: String,
  fin_code: String,
  ops_code: String,
  sales_code: String,
  trader_no: String,
  trader_name: String,
  employee_no: String,
  employee_name: String,
  biz_code: String,
  control_center: String,
  control_element: String,
  cat_3rd: String,
  cat_4th: String,
  cat_5th: String,
  t_time: Float,
  count: Int,
  count_distinct: Int,
  amount: Float,
  pct: Float,
  pct_acc: Float,
  data_i: Int,
  data_f: Float,
  data_af: [Float],
  data_ai: [String],
  data_i1: Int,
  data_f1: Float,
  remarks: String,
  xorder: Int,
  control_center_id: ID,
  profile_id: ID,
  trader_id: ID,
   
   }

input CubeDataInput {id: ID,
  cube_no: String,
  t_run: String,
  service_no: String,
  cat_1st: String,
  cat_2nd: String,
  fin_code: String,
  ops_code: String,
  sales_code: String,
  trader_no: String,
  trader_name: String,
  employee_no: String,
  employee_name: String,
  biz_code: String,
  control_center: String,
  control_element: String,
  cat_3rd: String,
  cat_4th: String,
  cat_5th: String,
  t_time: Float,
  count: Int,
  count_distinct: Int,
  amount: Float,
  pct: Float,
  pct_acc: Float,
  data_i: Int,
  data_f: Float,
  data_af: [Float],
  data_ai: [String],
  data_i1: Int,
  data_f1: Float,
  remarks: String,
  xorder: Int,
  control_center_id: ID,
  profile_id: ID,
  trader_id: ID,
   }

type ChartData {id: ID!,
  cube_no: String,
  chart_no: String,
  t_run: String,
  service_no: String,
  cat_1st: String,
  cat_2nd: String,
  fin_code: String,
  ops_code: String,
  sales_code: String,
  trader_no: String,
  trader_name: String,
  employee_no: String,
  employee_name: String,
  biz_code: String,
  control_center: String,
  temp_char: String,
  control_element: String,
  cat_3rd: String,
  cat_4th: String,
  cat_5th: String,
  t_time: Float,
  count: Int,
  count_distinct: Int,
  amount: Float,
  pct: Float,
  pct_acc: Float,
  data_i: Int,
  data_f: Float,
  data_af: [Float],
  data_ai: [String],
  data_i1: Int,
  data_f1: Float,
  remarks: String,
  xorder: Int,
  amount_avg: Float,
  amount_acc: Float,
  control_center_id: ID,
  profile_id: ID,
  chart_title: String,
  type: String,
  record_type: String,
   
   }

input ChartDataInput {id: ID,
  cube_no: String,
  chart_no: String,
  t_run: String,
  service_no: String,
  cat_1st: String,
  cat_2nd: String,
  fin_code: String,
  ops_code: String,
  sales_code: String,
  trader_no: String,
  trader_name: String,
  employee_no: String,
  employee_name: String,
  biz_code: String,
  control_center: String,
  temp_char: String,
  control_element: String,
  cat_3rd: String,
  cat_4th: String,
  cat_5th: String,
  t_time: Float,
  count: Int,
  count_distinct: Int,
  amount: Float,
  pct: Float,
  pct_acc: Float,
  data_i: Int,
  data_f: Float,
  data_af: [Float],
  data_ai: [String],
  data_i1: Int,
  data_f1: Float,
  remarks: String,
  xorder: Int,
  amount_avg: Float,
  amount_acc: Float,
  control_center_id: ID,
  profile_id: ID,
  chart_title: String,
  type: String,
  record_type: String,
   }

type ChartTitle {id: ID!,
  code: String,
  show_title: String,
  title_desc: String,
   
   }

input ChartTitleInput {id: ID,
  code: String,
  show_title: String,
  title_desc: String,
   }

`;

const biTypeDefs = [typeDefs]
export default biTypeDefs;

//  2017-11-02 13:07:41.442523+08